"""initial

Revision ID: d69050a7b70e
Revises: 
Create Date: 2025-03-29 16:05:17.322800

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd69050a7b70e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('quest',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id', name='quest_pkey'),
    sa.UniqueConstraint('name', name='quest_name_uc')
    )
    op.create_table('completion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quest_id', sa.Integer(), nullable=False),
    sa.Column('user', sa.Text(), nullable=False),
    sa.Column('time_took', sa.Integer(), nullable=False),
    sa.Column('rate', sa.Integer(), server_default='0', nullable=False),
    sa.Column('status', sa.String(length=16), server_default='in progress', nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('submitted_at', postgresql.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['quest_id'], ['quest.id'], name='completion_quest_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='completion_pkey'),
    sa.UniqueConstraint('quest_id', 'user', name='completion_quest_user_uc')
    )
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quest_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=16), server_default='text', nullable=False),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('responses', sa.Text(), nullable=False),
    sa.Column('answers', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['quest_id'], ['quest.id'], name='task_quest_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='task_pkey'),
    sa.UniqueConstraint('quest_id', 'question', name='task_question_uc')
    )
    op.create_table('task_completion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('completion_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('answer', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['completion_id'], ['completion.id'], name='task_completion_completion_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], name='task,completion_task_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='task_completion_pkey'),
    sa.UniqueConstraint('completion_id', 'task_id', name='task_completion_uc')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_completion')
    op.drop_table('task')
    op.drop_table('completion')
    op.drop_table('quest')
    # ### end Alembic commands ###
